---
generate data:
    help: load and process all data from corpora
    select articles:
        help: find all NGO mentions in the corpora
        dependencies: 
            - ./Data/ngos.csv
            - ./Corpora/egypt_independent.db
            - ./Corpora/ahram.db
            - ./Corpora/dne.db
        formula: >
            python3 Python/select_articles.py
        output:
            - ./Data/ngo_mentions.obj
            - ./Data/ngo_mention_ids.csv
    extract pos:
        help: extract verbs from sentences that mention NGOs
        dependencies: 
            - ./Data/ngos.csv
            - ./Data/ngo_mentions.obj
            - ./Corpora/egypt_independent.db
            - ./Corpora/ahram.db
            - ./Corpora/dne.db
        formula: >
            python3 Python/extract_pos.py
        output:
            - ./Output/source_list_WILL_BE_OVERWRITTEN.xlsx
            - ./Output/verb_list.csv
    export articles:
        help: export articles from SQLite databases and stem and n-gram them
        dependencies: 
            - ./Python/export_to_mallet.py
            - ./Corpora/egypt_independent.db
            - ./Corpora/ahram.db
            - ./Corpora/dne.db
        formula: >
            mkdir Data/articles 2>/dev/null || true;
            python3 Python/export_to_mallet.py Corpora/egypt_independent.db egypt_independent Data/articles;
            python3 Python/export_to_mallet.py Corpora/ahram.db ahram Data/articles;
            python3 Python/export_to_mallet.py Corpora/dne.db dne Data/articles;
        output: 
            - ./Data/articles/*.txt
    clean and process articles:
        help: stem and clean up exported articles
        dependencies: 
            - ./Python/process_natural_language.py
            - ./Data/articles/*.txt
        formula: >
            mkdir Data/articles_stemmed 2>/dev/null || true; 
            python2 Python/process_natural_language.py Data/articles/ Data/articles_stemmed Corpora/stopwords.txt Output/bigrams.csv
        output:
            - ./Data/articles_stemmed/*.txt
            - ./Output/bigrams.csv


analyze data:
    help: load data and build all models
    load data into R: 
        help: load NGO articles into R
        dependencies: 
            - ./Data/ngos.csv
            - ./Data/ngo_mention_ids.csv
            - ./R/load_data.R
        formula: >
            cd R; Rscript load_data.R
        output: 
            - ./Data/mentions_data.RData
            - ./Data/full_text.RData
    build topic model:
        help: create a topic model using the stemmed articles
        dependencies:
            - ./R/create_topic_model.R
            - ./Data/articles_stemmed/*.txt
        formula: >
            cd R; Rscript create_topic_model.R
        output: 
            - ./Data/topic_model.RData
            - ./Data/topics.mallet
            - ./Data/topic-state.gz
            - ./Data/topic-keys.txt
            - ./Data/topic-doctopics.txt
            - ./Data/topic-docs.csv


# generate output:
#     help: generate all output for the paper and presentation
#     output summary tables: 
#         help: "summary tables of corpus, NGOs, and model"
#         dependencies:
#             - ./Data/topic_model.RData
#             - ./Data/full_text.RData
#             - ./R/summary_tables.R
#         formula: >
#             cd R; Rscript summary_tables.R
#         output:
#             - ./Output/table_corpus_summary.md
#             - ./Output/table_ngo_list.md
#             - ./Output/table_topic_model.md
...
